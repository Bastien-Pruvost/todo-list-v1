{"version":3,"file":"main.bundle.js","mappings":"mBAEA,IAAMA,EAAuBC,aAAaC,QAAQ,YAC9CC,EAAWC,KAAKC,MAAML,IAAyB,GAC7CM,EAAoBC,SAASC,cAAc,cAC3CC,EAAcF,SAASC,cAAc,aACrCE,EAAeH,SAASC,cAAc,yBACtCG,EAA2BJ,SAASC,cAAc,6BAElDI,EAAkB,WACtBN,EAAkBO,UAAY,GAC9BV,EAASW,KAAI,SAACC,EAAMC,GAClBD,EAAKE,SAAWC,EAA0BH,EAAMC,GAASG,EAAkBJ,EAAMC,OAI/EG,EAAoB,SAACJ,EAAMC,GAC/B,IAAMI,EAAab,SAASC,cAAc,kBACpCa,EAAUd,SAASe,WAAWF,EAAWG,SAAS,GAClDC,EAAqBH,EAAQb,cAAc,wBAC3CiB,EAAWJ,EAAQb,cAAc,eACjCkB,EAAaL,EAAQb,cAAc,mBACnCmB,EAAeN,EAAQb,cAAc,qBAC3CiB,EAASG,YAAcb,EAAKc,KAC5Bd,EAAKe,YAAcN,EAAmBO,UAAUC,IAAI,YACpDR,EAAmBS,iBAAiB,SAAS,WAC3CC,IACAC,EAAiBnB,MAEnBU,EAAWO,iBAAiB,SAAS,WACnCC,IACAE,EAAepB,MAEjBW,EAAaM,iBAAiB,SAAS,WACrCI,EAAWrB,MAEbV,EAAkBgC,OAAOjB,IAGrBH,EAA4B,SAACH,EAAMC,GACvC,IAAMI,EAAab,SAASC,cAAc,4BACpCa,EAAUd,SAASe,WAAWF,EAAWG,SAAS,GAClDC,EAAqBH,EAAQb,cAAc,wBAC3C+B,EAAYlB,EAAQb,cAAc,gBAClCgC,EAAWnB,EAAQb,cAAc,cACjCiC,EAAepB,EAAQb,cAAc,qBAC3C+B,EAAUG,MAAQ3B,EAAKc,KACvBd,EAAKe,YAAcN,EAAmBO,UAAUC,IAAI,YACpDR,EAAmBS,iBAAiB,SAAS,WAC3CE,EAAiBnB,MAEnBwB,EAASP,iBAAiB,UAAU,SAACU,GACnCA,EAAMC,iBACNC,EAASN,EAAUG,MAAO1B,MAE5ByB,EAAaR,iBAAiB,SAAS,WACrCG,EAAepB,MAEjBV,EAAkBgC,OAAOjB,GACzBkB,EAAUO,SAeNC,EAAqB,WACzB9C,aAAa+C,QAAQ,WAAY5C,KAAK6C,UAAU9C,KAG5CiC,EAAiB,SAACpB,GACtBb,EAASa,GAAOC,UAAYd,EAASa,GAAOC,SAC5C8B,IACAnC,KAGIsB,EAAqB,kBAAM/B,EAAS+C,SAAQ,SAACnC,GAAD,OAAWA,EAAKE,UAAW,MAEvE4B,EAAW,SAACM,EAASnC,GACzBb,EAASa,GAAOa,KAAOsB,EACvBf,EAAepB,GACf+B,IACAnC,KAGIyB,EAAa,SAACrB,GAClBb,EAASiD,OAAOpC,EAAO,GACvB+B,IACAnC,KAGIuB,EAAmB,SAACnB,GACxBb,EAASa,GAAOc,YAAc3B,EAASa,GAAOc,WAC9C3B,EAASa,GAAOc,YAAc3B,EAASkD,KAAKlD,EAASiD,OAAOpC,EAAO,GAAG,IACtE+B,IACAnC,KAOFH,EAAYwB,iBAAiB,UAAU,SAACU,GAhDlB,IACdW,EAgDNX,EAAMC,iBAhDAU,EAAU,CACdzB,KAAMnB,EAAagC,MACnBZ,YAAY,EACZb,UAAU,GAEZP,EAAagC,OAASvC,EAASoD,QAAQD,GACvC5C,EAAagC,MAAQ,GACrBK,IACAnC,IA0CAF,EAAaoC,WAGfnC,EAAyBsB,iBAAiB,SAAS,WATjD9B,EAAWA,EAASqD,QAAO,SAACzC,GAAD,OAAWA,EAAKe,cAW3CiB,IACAnC,OAGFA,K","sources":["webpack://todo-list-v1/./src/index.js"],"sourcesContent":["import './scss/index.scss';\r\n\r\nconst localStorageTodoData = localStorage.getItem('todoList');\r\nlet todoData = JSON.parse(localStorageTodoData) || [];\r\nconst todoListContainer = document.querySelector('.todo-list');\r\nconst newTaskForm = document.querySelector('.todo-add');\r\nconst newTaskInput = document.querySelector('.todo-add__text-input');\r\nconst deleteFinishedTaskButton = document.querySelector('.delete-finished-task-btn');\r\n\r\nconst displayTodoList = () => {\r\n  todoListContainer.innerHTML = '';\r\n  todoData.map((task, index) => {\r\n    task.editMode ? createTaskElementEditMode(task, index) : createTaskElement(task, index);\r\n  });\r\n};\r\n\r\nconst createTaskElement = (task, index) => {\r\n  const liTemplate = document.querySelector('#task-template');\r\n  const liClone = document.importNode(liTemplate.content, true);\r\n  const toggleFinishButton = liClone.querySelector('.task__toggle-finish');\r\n  const taskText = liClone.querySelector('.task__text');\r\n  const editButton = liClone.querySelector('.task__edit-btn');\r\n  const deleteButton = liClone.querySelector('.task__delete-btn');\r\n  taskText.textContent = task.text;\r\n  task.isFinished && toggleFinishButton.classList.add('finished');\r\n  toggleFinishButton.addEventListener('click', () => {\r\n    disableAllEditMode();\r\n    toggleFinishTask(index);\r\n  });\r\n  editButton.addEventListener('click', () => {\r\n    disableAllEditMode();\r\n    toggleEditMode(index);\r\n  });\r\n  deleteButton.addEventListener('click', () => {\r\n    deleteTask(index);\r\n  });\r\n  todoListContainer.append(liClone);\r\n};\r\n\r\nconst createTaskElementEditMode = (task, index) => {\r\n  const liTemplate = document.querySelector('#task-template-edit-mode');\r\n  const liClone = document.importNode(liTemplate.content, true);\r\n  const toggleFinishButton = liClone.querySelector('.task__toggle-finish');\r\n  const taskInput = liClone.querySelector('.task__input');\r\n  const saveForm = liClone.querySelector('.save-form');\r\n  const cancelButton = liClone.querySelector('.task__cancel-btn');\r\n  taskInput.value = task.text;\r\n  task.isFinished && toggleFinishButton.classList.add('finished');\r\n  toggleFinishButton.addEventListener('click', () => {\r\n    toggleFinishTask(index);\r\n  });\r\n  saveForm.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n    editTask(taskInput.value, index);\r\n  });\r\n  cancelButton.addEventListener('click', () => {\r\n    toggleEditMode(index);\r\n  });\r\n  todoListContainer.append(liClone);\r\n  taskInput.focus();\r\n};\r\n\r\nconst createNewTask = () => {\r\n  const newTask = {\r\n    text: newTaskInput.value,\r\n    isFinished: false,\r\n    editMode: false\r\n  };\r\n  newTaskInput.value && todoData.unshift(newTask);\r\n  newTaskInput.value = '';\r\n  pushInLocalStorage();\r\n  displayTodoList();\r\n};\r\n\r\nconst pushInLocalStorage = () => {\r\n  localStorage.setItem('todoList', JSON.stringify(todoData));\r\n};\r\n\r\nconst toggleEditMode = (index) => {\r\n  todoData[index].editMode = !todoData[index].editMode;\r\n  pushInLocalStorage();\r\n  displayTodoList();\r\n};\r\n\r\nconst disableAllEditMode = () => todoData.forEach((task) => (task.editMode = false));\r\n\r\nconst editTask = (newText, index) => {\r\n  todoData[index].text = newText;\r\n  toggleEditMode(index);\r\n  pushInLocalStorage();\r\n  displayTodoList();\r\n};\r\n\r\nconst deleteTask = (index) => {\r\n  todoData.splice(index, 1);\r\n  pushInLocalStorage();\r\n  displayTodoList();\r\n};\r\n\r\nconst toggleFinishTask = (index) => {\r\n  todoData[index].isFinished = !todoData[index].isFinished;\r\n  todoData[index].isFinished && todoData.push(todoData.splice(index, 1)[0]);\r\n  pushInLocalStorage();\r\n  displayTodoList();\r\n};\r\n\r\nconst deleteFinishedTask = () => {\r\n  todoData = todoData.filter((task) => !task.isFinished);\r\n};\r\n\r\nnewTaskForm.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n  createNewTask();\r\n  newTaskInput.focus();\r\n});\r\n\r\ndeleteFinishedTaskButton.addEventListener('click', () => {\r\n  deleteFinishedTask();\r\n  pushInLocalStorage();\r\n  displayTodoList();\r\n});\r\n\r\ndisplayTodoList();\r\n"],"names":["localStorageTodoData","localStorage","getItem","todoData","JSON","parse","todoListContainer","document","querySelector","newTaskForm","newTaskInput","deleteFinishedTaskButton","displayTodoList","innerHTML","map","task","index","editMode","createTaskElementEditMode","createTaskElement","liTemplate","liClone","importNode","content","toggleFinishButton","taskText","editButton","deleteButton","textContent","text","isFinished","classList","add","addEventListener","disableAllEditMode","toggleFinishTask","toggleEditMode","deleteTask","append","taskInput","saveForm","cancelButton","value","event","preventDefault","editTask","focus","pushInLocalStorage","setItem","stringify","forEach","newText","splice","push","newTask","unshift","filter"],"sourceRoot":""}